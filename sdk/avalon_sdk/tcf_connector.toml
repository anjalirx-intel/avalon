# Copyright 2019 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

title = "Avalon Connector configuration"

[owner]
name = "Avalon"
organization = "Hyperledger"

[tcf]
#Uri for the worker registry
json_rpc_uri = "http://localhost:1947"

# Block chain type, it identifies which blockchain to use.
# Currently supported types are: fabric or ethereum
[blockchain]
type = "ethereum"

[ethereum]
# Direct registry contract file
direct_registry_contract_file = "sdk/avalon_sdk/connector/blockchains/ethereum/contracts/WorkerRegistryList.sol"
# Worker registry contract file
worker_registry_contract_file = "sdk/avalon_sdk/connector/blockchains/ethereum/contracts/WorkerRegistry.sol"
# Work Order registry contract file
work_order_contract_file = "sdk/avalon_sdk/connector/blockchains/ethereum/contracts/WorkOrderRegistry.sol"

# Initially deploy the contracts using eth_cli.py to get the these addresses
# Deployed contract address of direct registry contract address.
direct_registry_contract_address = "0xD5A613945DE851C7c2f83fFDA4de0aE01CE980c0"
# Deployed contract address of worker registry contract address.
worker_registry_contract_address = "0x785C11b9b4636B1afDc5dfB4b02dC9749b287705"
# Deployed contract address of worker registry contract address.
work_order_contract_address = "0xdF38be8C1A45A12c00ddE9CEB4F25CeC289FA733"

# Ethereum account details
eth_account = "0xa525fB2e3fEaCC5716B89119cB84faB2B3793BDc"
# Ethereum account private key
acc_pvt_key = "4F611197A6E82715F4D2446FE015D1667E9C40A351411F3A7300F71F285D01B4"

# Version of solc to be used for compiling Solidity contracts
solc_version = "v0.5.15"
# Provider/event_provider for test network. The default urls are for a
# Hyperledger Besu client. These addresses need to be consistent with that in
# docs/dev-environments/ethereum/besu/docker-compose.yaml.
# This could be replaced with a Ropsten(Infura as the IAAS) provider or a
# Ganache client.
provider = "http://local-ganache:8545"
event_provider = "http://local-ganache:8545"
# chain_id is 3 for ropsten test network
# "1": Ethereum Mainnet
# "2": Morden Testnet (deprecated)
# "3": Ropsten Testnet
# "4": Rinkeby Testnet
# "42": Kovan Testnet

chain_id = 3
gas_limit = 3000000
gas_price = "100"

# Fabric blockchain
[fabric]
fabric_network_file = "sdk/avalon_sdk/connector/blockchains/fabric/network.json"
channel_name = "mychannel"

[WorkerConfig]
# These configs need to be same as that in tcs_config -
# https://github.com/hyperledger/avalon/blob/master/config/tcs_config.toml
ApplicationTypeId = "11aa22bb33cc44dd"
OrganizationId = "aabbcc1234ddeeff"
